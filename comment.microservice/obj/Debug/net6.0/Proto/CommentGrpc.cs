// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/comment.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace CommentApi {
  public static partial class CommentGrpc
  {
    static readonly string __ServiceName = "CommentApi.CommentGrpc";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CommentApi.GetCommentRequest> __Marshaller_CommentApi_GetCommentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CommentApi.GetCommentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CommentApi.GetCommentResponse> __Marshaller_CommentApi_GetCommentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CommentApi.GetCommentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CommentApi.GetCommentByIdRequest> __Marshaller_CommentApi_GetCommentByIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CommentApi.GetCommentByIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CommentApi.GetCommentByIdResponse> __Marshaller_CommentApi_GetCommentByIdResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CommentApi.GetCommentByIdResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CommentApi.GetCountCommentRequest> __Marshaller_CommentApi_GetCountCommentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CommentApi.GetCountCommentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CommentApi.GetCountCommentResponse> __Marshaller_CommentApi_GetCountCommentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CommentApi.GetCountCommentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CommentApi.CommentCreateRequest> __Marshaller_CommentApi_CommentCreateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CommentApi.CommentCreateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CommentApi.ResponseCreate> __Marshaller_CommentApi_ResponseCreate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CommentApi.ResponseCreate.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CommentApi.GRPCommentDeleteRequest> __Marshaller_CommentApi_GRPCommentDeleteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CommentApi.GRPCommentDeleteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CommentApi.GRPCommentDeleteResponse> __Marshaller_CommentApi_GRPCommentDeleteResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CommentApi.GRPCommentDeleteResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CommentApi.GetCommentRequest, global::CommentApi.GetCommentResponse> __Method_GetAllComment = new grpc::Method<global::CommentApi.GetCommentRequest, global::CommentApi.GetCommentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllComment",
        __Marshaller_CommentApi_GetCommentRequest,
        __Marshaller_CommentApi_GetCommentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CommentApi.GetCommentByIdRequest, global::CommentApi.GetCommentByIdResponse> __Method_GetCommentById = new grpc::Method<global::CommentApi.GetCommentByIdRequest, global::CommentApi.GetCommentByIdResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCommentById",
        __Marshaller_CommentApi_GetCommentByIdRequest,
        __Marshaller_CommentApi_GetCommentByIdResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CommentApi.GetCountCommentRequest, global::CommentApi.GetCountCommentResponse> __Method_CountCommentByPostId = new grpc::Method<global::CommentApi.GetCountCommentRequest, global::CommentApi.GetCountCommentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CountCommentByPostId",
        __Marshaller_CommentApi_GetCountCommentRequest,
        __Marshaller_CommentApi_GetCountCommentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CommentApi.CommentCreateRequest, global::CommentApi.ResponseCreate> __Method_CreateComment = new grpc::Method<global::CommentApi.CommentCreateRequest, global::CommentApi.ResponseCreate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateComment",
        __Marshaller_CommentApi_CommentCreateRequest,
        __Marshaller_CommentApi_ResponseCreate);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CommentApi.GRPCommentDeleteRequest, global::CommentApi.GRPCommentDeleteResponse> __Method_DeleteComment = new grpc::Method<global::CommentApi.GRPCommentDeleteRequest, global::CommentApi.GRPCommentDeleteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteComment",
        __Marshaller_CommentApi_GRPCommentDeleteRequest,
        __Marshaller_CommentApi_GRPCommentDeleteResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::CommentApi.CommentReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CommentGrpc</summary>
    [grpc::BindServiceMethod(typeof(CommentGrpc), "BindService")]
    public abstract partial class CommentGrpcBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CommentApi.GetCommentResponse> GetAllComment(global::CommentApi.GetCommentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CommentApi.GetCommentByIdResponse> GetCommentById(global::CommentApi.GetCommentByIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CommentApi.GetCountCommentResponse> CountCommentByPostId(global::CommentApi.GetCountCommentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CommentApi.ResponseCreate> CreateComment(global::CommentApi.CommentCreateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CommentApi.GRPCommentDeleteResponse> DeleteComment(global::CommentApi.GRPCommentDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CommentGrpcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAllComment, serviceImpl.GetAllComment)
          .AddMethod(__Method_GetCommentById, serviceImpl.GetCommentById)
          .AddMethod(__Method_CountCommentByPostId, serviceImpl.CountCommentByPostId)
          .AddMethod(__Method_CreateComment, serviceImpl.CreateComment)
          .AddMethod(__Method_DeleteComment, serviceImpl.DeleteComment).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CommentGrpcBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAllComment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CommentApi.GetCommentRequest, global::CommentApi.GetCommentResponse>(serviceImpl.GetAllComment));
      serviceBinder.AddMethod(__Method_GetCommentById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CommentApi.GetCommentByIdRequest, global::CommentApi.GetCommentByIdResponse>(serviceImpl.GetCommentById));
      serviceBinder.AddMethod(__Method_CountCommentByPostId, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CommentApi.GetCountCommentRequest, global::CommentApi.GetCountCommentResponse>(serviceImpl.CountCommentByPostId));
      serviceBinder.AddMethod(__Method_CreateComment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CommentApi.CommentCreateRequest, global::CommentApi.ResponseCreate>(serviceImpl.CreateComment));
      serviceBinder.AddMethod(__Method_DeleteComment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CommentApi.GRPCommentDeleteRequest, global::CommentApi.GRPCommentDeleteResponse>(serviceImpl.DeleteComment));
    }

  }
}
#endregion
